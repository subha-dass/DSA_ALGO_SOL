#link-  https://www.codingninjas.com/studio/problems/count-ways-to-reach-nth-stairs_798650?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTabValue=PROBLEM

import java.util.* ;
import java.io.*; 
public class Solution {
	public static final int MOD = 1000000007;
	public static int countDistinctWayToClimbStair(long nStairs) {
		if(nStairs == 0 || nStairs==1){ return 1;}
		int n = (int)nStairs;
		int[] dp = new int[n+1];
		dp[0] = 1;
		dp[1] = 1;
		int count = countDistinctways(nStairs,dp);
		
		return count;
	}
	public static int countDistinctways(long n , int [] dp){
		
		
		for(int i=2;i<=n;i++){
			dp[i] = dp[i-1]%MOD+dp[i-2]%MOD;
		}

		return dp[dp.length-1]%MOD;
	}
}