#link- https://www.codingninjas.com/studio/problems/shortest-supersequence_4244493?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTabValue=PROBLEM


import java.util.* ;
import java.io.*; 
public class Solution {
    public static String shortestSupersequence(String a, String b) {
        // Write your code here..
        int m=a.length();
		int n=b.length();
		int[][] dp=new int[m+1][n+1];
		for(int i=0;i<=m;i++){
			dp[i][0]=0;
		}for(int i=0;i<=n;i++){
			dp[0][i]=0;
		}
		for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(a.charAt(i-1)==b.charAt(j-1)){
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        int i=m;
        int j=n;
        String ans="";
        while(i>0 && j>0){
            if(a.charAt(i-1)==b.charAt(j-1)){
                ans+=a.charAt(i-1);
                i--;j--;
            }
            else if(dp[i-1][j]>dp[i][j-1]){
                ans+=a.charAt(i-1);
                i--;
            }else{
                ans+=b.charAt(j-1);
                j--;
            }
        }
        while(i>0){
            ans+=a.charAt(i-1);
            i--;
        }while(j>0){
            ans+=b.charAt(j-1);
            j--;
        }
        char[] charArray = ans.toCharArray();
        
        // Use two pointers approach to reverse the string in place
        int left = 0;
        int right = charArray.length - 1;
        while (left < right) {
            // Swap characters at left and right pointers directly in the original string
            char temp = charArray[left];
            charArray[left] = charArray[right];
            charArray[right] = temp;
            
            // Move the pointers towards the center
            left++;
            right--;
        }
        return String.valueOf(charArray);

    }

}