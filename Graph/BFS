#link-https://www.codingninjas.com/studio/problems/bfs-in-graph_973002?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.ArrayList;
public class Solution {
    
    public static List<Integer> bfsTraversal(int n, List<List<Integer>> adj){
        // Write your code here
        boolean visited[]=new boolean[n];
        List<Integer> result = new ArrayList<>();
        Queue<Integer> q=new LinkedList<>();
        visited[0]=true;
        q.add(0);
        while(!q.isEmpty()){
            int u=q.poll();
            result.add(u);
            for(int v:adj.get(u)){
                if(!visited[v]){
                    visited[v]=true;
                    q.add(v);
                }
            }
        }
        return result;
    }
}

#link-https://www.geeksforgeeks.org/problems/bfs-traversal-of-graph/1
class Solution {
    // Function to return Breadth First Traversal of given graph.

    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
         // Code here
        ArrayList<Integer> list = new ArrayList<>();
        Queue<Integer> q = new LinkedList<>();
        q.add(0);
       
        boolean vis[]  = new boolean[V];
         vis[0] = true;
        while(!q.isEmpty())
        {
            int cur = q.remove();
            
                list.add(cur);
               
                for(int i : adj.get(cur))
                {
                    if (!vis[i]) {
                    q.add(i); 
                    vis[i] = true; // Mark them as visited.
                }
            }
        }
        
        return list;
        
    
    }
}